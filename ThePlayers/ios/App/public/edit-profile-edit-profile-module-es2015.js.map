{"version":3,"sources":["./src/app/edit-profile/edit-profile.page.scss","./src/app/edit-profile/edit-profile.page.html","./src/app/edit-profile/edit-profile.module.ts","./src/app/edit-profile/edit-profile-routing.module.ts","./src/app/edit-profile/edit-profile.page.ts"],"names":[],"mappings":"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","file":"edit-profile-edit-profile-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtcHJvZmlsZS9lZGl0LXByb2ZpbGUucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n      <ion-badge\\r\\n        color=\\\"danger\\\"\\r\\n        class=\\\"badge-notifiche\\\"\\r\\n        *ngIf=\\\"this.env.notificationsCounter + this.env.ticketUpdates\\\"\\r\\n      >\\r\\n        {{this.env.notificationsCounter + this.env.ticketUpdates}}</ion-badge\\r\\n      >\\r\\n    </ion-buttons>\\r\\n    <ion-title>Profilo</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <form (ngSubmit)=\\\"editUser()\\\">\\r\\n    <ion-text style=\\\"margin-left: 10px\\\">Dati utente</ion-text>\\r\\n    <ion-card>\\r\\n      <ion-item color=\\\"white\\\">\\r\\n        <ion-label><i class=\\\"fas fa-user\\\"></i></ion-label>\\r\\n        <ion-input\\r\\n          type=\\\"text\\\"\\r\\n          [(ngModel)]=\\\"this.userObj.username\\\"\\r\\n          (change)=\\\"onChangeData()\\\"\\r\\n          name=\\\"username\\\"\\r\\n        ></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item color=\\\"white\\\">\\r\\n        <ion-label><i class=\\\"fas fa-at\\\"></i></ion-label>\\r\\n        <ion-input\\r\\n          type=\\\"email\\\"\\r\\n          [(ngModel)]=\\\"this.userObj.email\\\"\\r\\n          (change)=\\\"onChangeData()\\\"\\r\\n          name=\\\"email\\\"\\r\\n        ></ion-input>\\r\\n      </ion-item>\\r\\n    </ion-card>\\r\\n    <ion-text style=\\\"margin-left: 10px\\\">Console ID</ion-text>\\r\\n    <ion-card>\\r\\n      <ion-item color=\\\"white\\\" *ngFor=\\\"let platform of userObj.platforms\\\">\\r\\n        <ion-label [innerHTML]=\\\"platform.icon\\\"></ion-label>\\r\\n        <ion-input\\r\\n          type=\\\"text\\\"\\r\\n          id=\\\"{{platform._id}}\\\"\\r\\n          (change)=\\\"onChangeData()\\\"\\r\\n          value=\\\"{{platform.username}}\\\"\\r\\n          placeholder=\\\"{{platform.name}}\\\"\\r\\n        ></ion-input>\\r\\n      </ion-item>\\r\\n    </ion-card>\\r\\n\\r\\n    <ion-text style=\\\"margin-left: 10px\\\">Password</ion-text>\\r\\n    <ion-card>\\r\\n      <ion-item color=\\\"white\\\">\\r\\n        <ion-label><i class=\\\"fas fa-key\\\"></i> Password Vecchia</ion-label>\\r\\n        <ion-input\\r\\n          type=\\\"password\\\"\\r\\n          [(ngModel)]=\\\"this.oldPassword\\\"\\r\\n          (change)=\\\"onChangeData()\\\"\\r\\n          name=\\\"password\\\"\\r\\n        ></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item color=\\\"white\\\">\\r\\n        <ion-label><i class=\\\"fas fa-key\\\"></i> Nuova Password</ion-label>\\r\\n        <ion-input\\r\\n          type=\\\"password\\\"\\r\\n          [(ngModel)]=\\\"this.newPassword\\\"\\r\\n          (change)=\\\"onChangeData()\\\"\\r\\n          name=\\\"password\\\"\\r\\n        ></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item color=\\\"white\\\">\\r\\n        <ion-label><i class=\\\"fas fa-key\\\"></i> Ripeti Password</ion-label>\\r\\n        <ion-input\\r\\n          type=\\\"password\\\"\\r\\n          [(ngModel)]=\\\"this.repeatPassword\\\"\\r\\n          (change)=\\\"onChangeData()\\\"\\r\\n          name=\\\"password\\\"\\r\\n        >\\r\\n        </ion-input>\\r\\n      </ion-item>\\r\\n    </ion-card>\\r\\n    <ion-button\\r\\n      class=\\\"submit-button\\\"\\r\\n      type=\\\"submit\\\"\\r\\n      disabled=\\\"{{this.disabledAggiorna}}\\\"\\r\\n    >\\r\\n      Aggiorna\\r\\n    </ion-button>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { IonicModule } from \"@ionic/angular\";\r\n\r\nimport { ProfilePageRoutingModule } from \"./edit-profile-routing.module\";\r\n\r\nimport { ProfilePage } from \"./edit-profile.page\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, ProfilePageRoutingModule],\r\n  declarations: [ProfilePage],\r\n})\r\nexport class ProfilePageModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { ProfilePage } from \"./edit-profile.page\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: ProfilePage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProfilePageRoutingModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { GlobalEnv } from \"../env\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Plugins } from \"@capacitor/core\";\r\n\r\nimport jwtDecode from \"jwt-decode\";\r\nconst { Storage } = Plugins;\r\n@Component({\r\n  selector: \"app-profile\",\r\n  templateUrl: \"./edit-profile.page.html\",\r\n  styleUrls: [\"./edit-profile.page.scss\"],\r\n})\r\nexport class ProfilePage implements OnInit {\r\n  userObj: any = {};\r\n  disabledAggiorna: boolean = true;\r\n  oldPassword: string = null;\r\n  newPassword: string = null;\r\n  repeatPassword: string = null;\r\n  platformList: any = {};\r\n  token: string = null;\r\n  constructor(\r\n    public env: GlobalEnv,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.getToken().then(() => {\r\n      if (this.authService.isLoggedIn) {\r\n        Storage.get({ key: \"token\" }).then((data) => {\r\n          this.token = data.value;\r\n          this.getProfileInfo(data.value);\r\n        });\r\n      } else {\r\n        this.router.navigateByUrl(\"/login\");\r\n      }\r\n    });\r\n  }\r\n\r\n  getProfileInfo(token) {\r\n    if (token) {\r\n      const decodedToken = jwtDecode(token);\r\n      const userId = decodedToken[\"id\"];\r\n      if (userId) {\r\n        this.http\r\n          .get(`${this.env.baseUri}/users/${userId}`)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              const userObj = response[\"user\"];\r\n              if (userObj) {\r\n                this.userObj = userObj ? userObj : null;\r\n                this.http\r\n                  .get(`${this.env.baseUri}/platforms/`)\r\n                  .subscribe((response) => {\r\n                    this.platformList = response;\r\n                    for (let i = 0; i < this.platformList.length; i++) {\r\n                      if (this.platformList[i]) {\r\n                        switch (this.platformList[i].name) {\r\n                          case \"Playstation\":\r\n                            this.platformList[i].icon =\r\n                              \"<i class='fab fa-playstation'></i>\";\r\n                            break;\r\n                          case \"Activision\":\r\n                            this.platformList[i].icon =\r\n                              \"<i class='fab fa-jedi-order'></i>\";\r\n                            break;\r\n                          case \"Xbox\":\r\n                            this.platformList[i].icon =\r\n                              \"<i class='fab fa-xbox'></i>\";\r\n                            break;\r\n                          case \"PC\":\r\n                            this.platformList[i].icon =\r\n                              \"<i class='fab fa-steam'></i>\";\r\n                            break;\r\n                          case \"Nintendo\":\r\n                            this.platformList[i].icon =\r\n                              \"<i class='fas fa-gamepad'></i>\";\r\n                            break;\r\n                          default:\r\n                            this.platformList[i].icon =\r\n                              \"<i class='fab fa-gamepad'></i>\";\r\n                            break;\r\n                        }\r\n                      }\r\n                    }\r\n                    this.updateUserPlatformData();\r\n                  });\r\n              }\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  doRefresh(event) {\r\n    this.authService.getToken().then(() => {\r\n      if (this.authService.isLoggedIn) {\r\n        Storage.get({ key: \"token\" }).then((data) => {\r\n          this.getProfileInfo(data.value);\r\n          event.target.complete();\r\n        });\r\n      } else {\r\n        this.router.navigateByUrl(\"/login\");\r\n      }\r\n    });\r\n  }\r\n\r\n  onChangeData() {\r\n    this.disabledAggiorna = false;\r\n  }\r\n\r\n  updateUserPlatformData() {\r\n    if (this.platformList && this.userObj.platforms) {\r\n      for (let i = 0; i < this.platformList.length; i++) {\r\n        let found = false;\r\n        for (let j = 0; j < this.userObj.platforms.length; j++) {\r\n          if (this.platformList[i]._id === this.userObj.platforms[j]._id) {\r\n            found = true;\r\n            this.userObj.platforms[j].icon = this.platformList[i].icon;\r\n            this.userObj.platforms[j].name = this.platformList[i].name;\r\n          }\r\n        }\r\n        if (!found) {\r\n          this.userObj.platforms.push(this.platformList[i]);\r\n        }\r\n      }\r\n    } else if (this.platformList && !this.userObj.platforms) {\r\n      this.userObj.platforms = this.platformList;\r\n    }\r\n  }\r\n\r\n  editUser() {\r\n    const userPatch = {};\r\n    if (this.userObj.username) userPatch[\"username\"] = this.userObj.username;\r\n\r\n    if (this.oldPassword && this.newPassword && this.repeatPassword) {\r\n      if (this.newPassword == this.repeatPassword) {\r\n        userPatch[\"newPassword\"] = this.newPassword;\r\n        userPatch[\"oldPassword\"] = this.oldPassword;\r\n      }\r\n    }\r\n\r\n    let listOfPlatform = [];\r\n\r\n    for (var i = 0; i < this.platformList.length; i++) {\r\n      const element = (<HTMLInputElement>(\r\n        document.getElementById(this.platformList[i]._id)\r\n      )).value;\r\n      listOfPlatform.push({\r\n        username: element,\r\n        _id: this.platformList[i]._id,\r\n      });\r\n    }\r\n    userPatch[\"platforms\"] = listOfPlatform;\r\n\r\n    const decodedToken = jwtDecode(this.token);\r\n    const userId = decodedToken[\"id\"];\r\n    this.http\r\n      .patch(`${this.env.baseUri}/users/${userId}`, userPatch)\r\n      .subscribe((resp) => {\r\n        location.reload();\r\n      });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}