{"version":3,"sources":["webpack:///src/app/user-tickets/user-tickets.page.html","webpack:///src/app/user-tickets/user-tickets.page.ts","webpack:///src/app/user-tickets/user-tickets-routing.module.ts","webpack:///src/app/user-tickets/user-tickets.module.ts","webpack:///src/app/user-tickets/user-tickets.page.scss"],"names":["Storage","UserTicketsPage","router","authService","http","env","ticketsList","ticketInfo","showTicketInfo","newMessage","loggedUserId","getToken","then","isLoggedIn","get","key","data","decodedToken","value","getTickets","navigateByUrl","baseUri","subscribe","resp","event","userId","target","complete","ticketId","post","message","fromAdminPanel","window","alert","location","reload","selector","template","routes","path","component","UserTicketsPageRoutingModule","imports","forChild","exports","UserTicketsPageModule","declarations"],"mappings":"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","file":"user-tickets-user-tickets-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n      <ion-badge\\r\\n        color=\\\"danger\\\"\\r\\n        class=\\\"badge-notifiche\\\"\\r\\n        *ngIf=\\\"this.env.notificationsCounter + this.env.ticketUpdates\\\"\\r\\n      >\\r\\n        {{this.env.notificationsCounter + this.env.ticketUpdates}}</ion-badge\\r\\n      >\\r\\n    </ion-buttons>\\r\\n    <ion-title>Tickets</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content style=\\\"padding-top: 15px\\\">\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <br />\\r\\n  <ion-title>Ticket Aperti</ion-title>\\r\\n  <br />\\r\\n  <ion-grid class=\\\"vertical-center\\\" *ngIf=\\\"ticketsList.length > 0\\\">\\r\\n    <ion-row size=\\\"12\\\" class=\\\"header\\\">\\r\\n      <ion-col size=\\\"5\\\">Titolo</ion-col>\\r\\n      <ion-col size=\\\"4\\\">Data</ion-col>\\r\\n      <ion-col size=\\\"1\\\">Stato</ion-col>\\r\\n      <ion-col size=\\\"2\\\">&nbsp;</ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row size=\\\"12\\\" *ngFor=\\\"let ticket of ticketsList\\\">\\r\\n      <ion-col size=\\\"5\\\">{{ticket.subject}}</ion-col>\\r\\n      <ion-col size=\\\"4\\\">\\r\\n        <ion-datetime\\r\\n          value=\\\"{{ticket.createdAt}}\\\"\\r\\n          display-timezone=\\\"utc\\\"\\r\\n          displayFormat=\\\"DD/MM/YYYY HH:mm:ss\\\"\\r\\n          disabled\\r\\n        ></ion-datetime>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"1\\\">\\r\\n        <i class=\\\"fas fa-check\\\" *ngIf=\\\"ticket.status === 'SOLVED'\\\"></i>\\r\\n        <i class=\\\"fas fa-clock\\\" *ngIf=\\\"ticket.status === 'IN_PROGRESS'\\\"></i>\\r\\n        <i class=\\\"fas fa-star\\\" *ngIf=\\\"ticket.status === 'NEW'\\\"></i>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2\\\"\\r\\n        ><ion-button color=\\\"success\\\" (click)=\\\"openTicketDetail(ticket._id)\\\"\\r\\n          ><i class=\\\"fas fa-search\\\"></i></ion-button\\r\\n      ></ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  <div class=\\\"ticket-detail-container\\\" *ngIf=\\\"showTicketInfo\\\">\\r\\n    <div class=\\\"ticket-detail-modal\\\">\\r\\n      <h1>Ticket</h1>\\r\\n      <div *ngIf=\\\"ticketInfo.category === 'DISPUTE'\\\">\\r\\n        <ion-text\\r\\n          >{{ticketInfo.matchObj.teamOneName}} vs\\r\\n          {{ticketInfo.matchObj.teamTwoName}}</ion-text\\r\\n        ><br /><br />\\r\\n        <ion-text><b>Torneo</b><br />{{ticketInfo.tournamentName}}</ion-text>\\r\\n        <ion-datetime\\r\\n          value=\\\"{{ticketInfo.createdAt}}\\\"\\r\\n          display-timezone=\\\"utc\\\"\\r\\n          displayFormat=\\\"DD/MM/YYYY HH:mm:ss\\\"\\r\\n          disabled\\r\\n        ></ion-datetime\\r\\n        ><br /><br />\\r\\n      </div>\\r\\n      <div *ngIf=\\\"ticketInfo.category !== 'DISPUTE'\\\">\\r\\n        <ion-datetime\\r\\n          value=\\\"{{ticketInfo.createdAt}}\\\"\\r\\n          display-timezone=\\\"utc\\\"\\r\\n          displayFormat=\\\"DD/MM/YYYY HH:mm:ss\\\"\\r\\n          disabled\\r\\n        ></ion-datetime>\\r\\n      </div>\\r\\n      <br />\\r\\n      <ion-text style=\\\"font-weight: bold\\\">Messaggi</ion-text><br />\\r\\n      <div *ngIf=\\\"ticketInfo.messages.length == 0\\\">Nessun messaggio...</div>\\r\\n      <div *ngIf=\\\"ticketInfo.messages.length > 0\\\">\\r\\n        <ion-grid style=\\\"width: 100%\\\" class=\\\"no-background\\\">\\r\\n          <ion-row\\r\\n            size=\\\"12\\\"\\r\\n            *ngFor=\\\"let message of ticketInfo.messages, let i = index\\\"\\r\\n          >\\r\\n            <ion-col>\\r\\n              <ion-row *ngIf=\\\"message.fromAdminPanel\\\"\\r\\n                ><p\\r\\n                  style=\\\"margin: 5px 0px\\\"\\r\\n                  [ngClass]=\\\"(message.user._id !== loggedUserId) ? 'text-align-right admin' : 'admin'\\\"\\r\\n                >\\r\\n                  {{message.user.username}}\\r\\n                </p></ion-row\\r\\n              >\\r\\n              <ion-row *ngIf=\\\"!message.fromAdminPanel\\\"\\r\\n                ><p\\r\\n                  style=\\\"margin: 5px 0px\\\"\\r\\n                  [ngClass]=\\\"(message.user._id !== loggedUserId) ? 'text-align-right' : ''\\\"\\r\\n                >\\r\\n                  {{message.user.username}}\\r\\n                </p></ion-row\\r\\n              >\\r\\n              <ion-row\\r\\n                ><p\\r\\n                  [ngClass]=\\\"(message.user._id !== loggedUserId) ? 'text-align-right italic' : 'italic'\\\"\\r\\n                >\\r\\n                  <ion-datetime\\r\\n                    value=\\\"{{message.createdAt}}\\\"\\r\\n                    display-timezone=\\\"utc\\\"\\r\\n                    displayFormat=\\\"DD/MM/YYYY HH:mm:ss\\\"\\r\\n                    disabled\\r\\n                  ></ion-datetime></p\\r\\n              ></ion-row>\\r\\n              <ion-row\\r\\n                ><p\\r\\n                  [ngClass]=\\\"(message.user._id !== loggedUserId) ? 'text-align-right margin-5-0' : 'margin-5-0'\\\"\\r\\n                >\\r\\n                  {{message.message}}\\r\\n                </p></ion-row\\r\\n              >\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </div>\\r\\n      <br /><br />\\r\\n      <form (submit)=\\\"addMessageToTicket(ticketInfo._id)\\\">\\r\\n        <ion-item color=\\\"white\\\">\\r\\n          <ion-textarea\\r\\n            [(ngModel)]=\\\"newMessage\\\"\\r\\n            name=\\\"newMessage\\\"\\r\\n            placeholder=\\\"Aggiungi messaggio...\\\"\\r\\n            rows=\\\"5\\\"\\r\\n            required\\r\\n          >\\r\\n          </ion-textarea>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-button color=\\\"success\\\" type=\\\"submit\\\"\\r\\n          >Aggiungi messaggio</ion-button\\r\\n        >\\r\\n        <ion-button color=\\\"danger\\\" (click)=\\\"closeTicketDetail()\\\"\\r\\n          >Chiudi</ion-button\\r\\n        >\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Plugins } from \"@capacitor/core\";\r\nimport { GlobalEnv } from \"../env\";\r\nimport { AuthService } from \"../services/auth.service\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst { Storage } = Plugins;\r\n@Component({\r\n  selector: \"app-user-tickets\",\r\n  templateUrl: \"./user-tickets.page.html\",\r\n  styleUrls: [\"./user-tickets.page.scss\"],\r\n})\r\nexport class UserTicketsPage implements OnInit {\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private http: HttpClient,\r\n    public env: GlobalEnv\r\n  ) {}\r\n\r\n  ticketsList: any = [];\r\n  ticketInfo: any = [];\r\n  showTicketInfo: boolean = false;\r\n  newMessage: string = null;\r\n  loggedUserId: string = null;\r\n  ngOnInit() {\r\n    this.authService.getToken().then(() => {\r\n      if (this.authService.isLoggedIn) {\r\n        Storage.get({ key: \"token\" }).then((data) => {\r\n          let decodedToken = jwtDecode(data.value);\r\n          this.loggedUserId = decodedToken[\"id\"];\r\n          this.getTickets();\r\n        });\r\n      } else {\r\n        this.router.navigateByUrl(\"/login\");\r\n      }\r\n    });\r\n  }\r\n\r\n  getTickets() {\r\n    this.http.get(`${this.env.baseUri}/tickets`).subscribe((resp) => {\r\n      this.ticketsList = resp;\r\n    });\r\n  }\r\n\r\n  doRefresh(event) {\r\n    this.authService.getToken().then(() => {\r\n      if (this.authService.isLoggedIn) {\r\n        Storage.get({ key: \"token\" }).then((data) => {\r\n          const decodedToken = jwtDecode(data.value);\r\n          const userId = decodedToken[\"id\"];\r\n          if (userId) {\r\n            this.getTickets();\r\n          }\r\n          event.target.complete();\r\n        });\r\n      } else {\r\n        this.router.navigateByUrl(\"/login\");\r\n      }\r\n    });\r\n  }\r\n\r\n  openTicketDetail(ticketId) {\r\n    if (!ticketId) return;\r\n    this.ticketInfo = [];\r\n    this.http\r\n      .get(`${this.env.baseUri}/tickets/${ticketId}`)\r\n      .subscribe((resp) => {\r\n        this.ticketInfo = resp;\r\n        this.showTicketInfo = true;\r\n      });\r\n  }\r\n\r\n  closeTicketDetail() {\r\n    this.ticketInfo = [];\r\n    this.showTicketInfo = false;\r\n  }\r\n\r\n  addMessageToTicket(ticketId) {\r\n    if (!this.newMessage) return;\r\n    this.http\r\n      .post(`${this.env.baseUri}/tickets/${ticketId}/messages`, {\r\n        message: this.newMessage,\r\n        fromAdminPanel: false,\r\n      })\r\n      .subscribe((resp) => {\r\n        window.alert(\"Messaggio inviato correttamente.\");\r\n        location.reload();\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserTicketsPage } from './user-tickets.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserTicketsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserTicketsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserTicketsPageRoutingModule } from './user-tickets-routing.module';\n\nimport { UserTicketsPage } from './user-tickets.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UserTicketsPageRoutingModule\n  ],\n  declarations: [UserTicketsPage]\n})\nexport class UserTicketsPageModule {}\n","export default \"ion-grid {\\n  background: white;\\n  color: #2d2d2d;\\n  border-radius: 5px;\\n  width: 94vw;\\n  left: 3vw;\\n}\\n\\nion-grid.no-background {\\n  background: transparent;\\n}\\n\\nion-row {\\n  background: white;\\n  margin-bottom: 5px;\\n  border-radius: 5px;\\n}\\n\\n.vertical-center ion-col {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\nion-row.header ion-col {\\n  font-weight: bold;\\n}\\n\\n.ticket-detail-container {\\n  width: 100%;\\n  height: 50vh;\\n  background: rgba(0, 0, 0, 0.5);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 9999;\\n  position: absolute;\\n  top: 250px;\\n  left: 0px;\\n}\\n\\n.ticket-detail-container .ticket-detail-modal {\\n  background: #2d2d2d;\\n  min-width: 90vw;\\n  padding: 15px 30px;\\n  border-radius: 10px;\\n  text-align: center;\\n  max-height: 83vh;\\n  bottom: 2vh;\\n  position: absolute;\\n  overflow: scroll;\\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.7);\\n}\\n\\n.text-align-right {\\n  text-align: right !important;\\n}\\n\\nion-row p {\\n  width: 100%;\\n  text-align: left;\\n}\\n\\nion-row p.text-align-right {\\n  text-align: right;\\n}\\n\\nion-row p.italic {\\n  font-style: italic;\\n  margin: 0 0;\\n  font-size: 11px;\\n}\\n\\nion-row p.margin-5-0 {\\n  margin: 5px 0px;\\n}\\n\\nion-row p.admin {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci10aWNrZXRzL3VzZXItdGlja2V0cy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxTQUFBO0FBQ0o7O0FBRUE7RUFFSSx1QkFBQTtBQUFKOztBQUdBO0VBQ0ksaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0FBQUo7O0FBSUk7RUFDSSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQURSOztBQU1JO0VBQ0ksaUJBQUE7QUFIUjs7QUFPQTtFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0EsOEJBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxTQUFBO0FBSko7O0FBTUk7RUFDSSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7RUFBdUIsZ0JBQUE7RUFDdkIsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSwyQ0FBQTtBQUhSOztBQU9BO0VBQ0ksNEJBQUE7QUFKSjs7QUFPQTtFQUNJLFdBQUE7RUFDQSxnQkFBQTtBQUpKOztBQU1JO0VBQ0ksaUJBQUE7QUFKUjs7QUFPSTtFQUNJLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7QUFMUjs7QUFRSTtFQUNJLGVBQUE7QUFOUjs7QUFTSTtFQUNJLFVBQUE7QUFQUiIsImZpbGUiOiJzcmMvYXBwL3VzZXItdGlja2V0cy91c2VyLXRpY2tldHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWdyaWQge1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICBjb2xvcjogIzJkMmQyZDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHdpZHRoOiA5NHZ3O1xyXG4gICAgbGVmdDogM3Z3O1xyXG59XHJcblxyXG5pb24tZ3JpZC5uby1iYWNrZ3JvdW5kIHtcclxuXHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxufVxyXG5cclxuaW9uLXJvdyB7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuLnZlcnRpY2FsLWNlbnRlciB7XHJcbiAgICBpb24tY29sIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB9XHJcbn1cclxuXHJcbmlvbi1yb3cuaGVhZGVyIHtcclxuICAgIGlvbi1jb2wge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgfVxyXG59XHJcblxyXG4udGlja2V0LWRldGFpbC1jb250YWluZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDUwdmg7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgei1pbmRleDogOTk5OTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMjUwcHg7XHJcbiAgICBsZWZ0OiAwcHg7XHJcblxyXG4gICAgLnRpY2tldC1kZXRhaWwtbW9kYWwge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICMyZDJkMmQ7XHJcbiAgICAgICAgbWluLXdpZHRoOiA5MHZ3O1xyXG4gICAgICAgIHBhZGRpbmc6IDE1cHggMzBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgICAgbWF4LWhlaWdodDogODN2aDtcclxuICAgICAgICBib3R0b206IDJ2aDtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgb3ZlcmZsb3c6IHNjcm9sbDtcclxuICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjcpO1xyXG4gICAgfVxyXG59XHJcblxyXG4udGV4dC1hbGlnbi1yaWdodCB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5pb24tcm93IHAge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cclxuICAgICYudGV4dC1hbGlnbi1yaWdodCB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHRcclxuICAgIH1cclxuXHJcbiAgICAmLml0YWxpYyB7XHJcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgICAgIG1hcmdpbjogMCAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIH1cclxuXHJcbiAgICAmLm1hcmdpbi01LTAge1xyXG4gICAgICAgIG1hcmdpbjogNXB4IDBweDtcclxuICAgIH1cclxuXHJcbiAgICAmLmFkbWluIHtcclxuICAgICAgICBjb2xvcjogcmVkO1xyXG4gICAgfVxyXG59Il19 */\";"]}