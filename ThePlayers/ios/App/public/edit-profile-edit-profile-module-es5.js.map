{"version":3,"sources":["webpack:///src/app/edit-profile/edit-profile.page.scss","webpack:///src/app/edit-profile/edit-profile.page.html","webpack:///src/app/edit-profile/edit-profile.module.ts","webpack:///src/app/edit-profile/edit-profile-routing.module.ts","webpack:///src/app/edit-profile/edit-profile.page.ts"],"names":["ProfilePageModule","imports","declarations","routes","path","component","ProfilePageRoutingModule","forChild","exports","Storage","ProfilePage","env","router","http","authService","userObj","disabledAggiorna","oldPassword","newPassword","repeatPassword","platformList","token","getToken","then","isLoggedIn","get","key","data","value","getProfileInfo","navigateByUrl","decodedToken","userId","baseUri","subscribe","response","i","length","name","icon","updateUserPlatformData","event","target","complete","platforms","found","j","_id","push","userPatch","username","listOfPlatform","element","document","getElementById","patch","resp","location","reload","selector","template"],"mappings":"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","file":"edit-profile-edit-profile-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtcHJvZmlsZS9lZGl0LXByb2ZpbGUucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n      <ion-badge\\r\\n        color=\\\"danger\\\"\\r\\n        class=\\\"badge-notifiche\\\"\\r\\n        *ngIf=\\\"this.env.notificationsCounter + this.env.ticketUpdates\\\"\\r\\n      >\\r\\n        {{this.env.notificationsCounter + this.env.ticketUpdates}}</ion-badge\\r\\n      >\\r\\n    </ion-buttons>\\r\\n    <ion-title>Profilo</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <form (ngSubmit)=\\\"editUser()\\\">\\r\\n    <ion-text style=\\\"margin-left: 10px\\\">Dati utente</ion-text>\\r\\n    <ion-card>\\r\\n      <ion-item color=\\\"white\\\">\\r\\n        <ion-label><i class=\\\"fas fa-user\\\"></i></ion-label>\\r\\n        <ion-input\\r\\n          type=\\\"text\\\"\\r\\n          [(ngModel)]=\\\"this.userObj.username\\\"\\r\\n          (change)=\\\"onChangeData()\\\"\\r\\n          name=\\\"username\\\"\\r\\n        ></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item color=\\\"white\\\">\\r\\n        <ion-label><i class=\\\"fas fa-at\\\"></i></ion-label>\\r\\n        <ion-input\\r\\n          type=\\\"email\\\"\\r\\n          [(ngModel)]=\\\"this.userObj.email\\\"\\r\\n          (change)=\\\"onChangeData()\\\"\\r\\n          name=\\\"email\\\"\\r\\n        ></ion-input>\\r\\n      </ion-item>\\r\\n    </ion-card>\\r\\n    <ion-text style=\\\"margin-left: 10px\\\">Console ID</ion-text>\\r\\n    <ion-card>\\r\\n      <ion-item color=\\\"white\\\" *ngFor=\\\"let platform of userObj.platforms\\\">\\r\\n        <ion-label [innerHTML]=\\\"platform.icon\\\"></ion-label>\\r\\n        <ion-input\\r\\n          type=\\\"text\\\"\\r\\n          id=\\\"{{platform._id}}\\\"\\r\\n          (change)=\\\"onChangeData()\\\"\\r\\n          value=\\\"{{platform.username}}\\\"\\r\\n          placeholder=\\\"{{platform.name}}\\\"\\r\\n        ></ion-input>\\r\\n      </ion-item>\\r\\n    </ion-card>\\r\\n\\r\\n    <ion-text style=\\\"margin-left: 10px\\\">Password</ion-text>\\r\\n    <ion-card>\\r\\n      <ion-item color=\\\"white\\\">\\r\\n        <ion-label><i class=\\\"fas fa-key\\\"></i> Password Vecchia</ion-label>\\r\\n        <ion-input\\r\\n          type=\\\"password\\\"\\r\\n          [(ngModel)]=\\\"this.oldPassword\\\"\\r\\n          (change)=\\\"onChangeData()\\\"\\r\\n          name=\\\"password\\\"\\r\\n        ></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item color=\\\"white\\\">\\r\\n        <ion-label><i class=\\\"fas fa-key\\\"></i> Nuova Password</ion-label>\\r\\n        <ion-input\\r\\n          type=\\\"password\\\"\\r\\n          [(ngModel)]=\\\"this.newPassword\\\"\\r\\n          (change)=\\\"onChangeData()\\\"\\r\\n          name=\\\"password\\\"\\r\\n        ></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item color=\\\"white\\\">\\r\\n        <ion-label><i class=\\\"fas fa-key\\\"></i> Ripeti Password</ion-label>\\r\\n        <ion-input\\r\\n          type=\\\"password\\\"\\r\\n          [(ngModel)]=\\\"this.repeatPassword\\\"\\r\\n          (change)=\\\"onChangeData()\\\"\\r\\n          name=\\\"password\\\"\\r\\n        >\\r\\n        </ion-input>\\r\\n      </ion-item>\\r\\n    </ion-card>\\r\\n    <ion-button\\r\\n      class=\\\"submit-button\\\"\\r\\n      type=\\\"submit\\\"\\r\\n      disabled=\\\"{{this.disabledAggiorna}}\\\"\\r\\n    >\\r\\n      Aggiorna\\r\\n    </ion-button>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { IonicModule } from \"@ionic/angular\";\r\n\r\nimport { ProfilePageRoutingModule } from \"./edit-profile-routing.module\";\r\n\r\nimport { ProfilePage } from \"./edit-profile.page\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, ProfilePageRoutingModule],\r\n  declarations: [ProfilePage],\r\n})\r\nexport class ProfilePageModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { ProfilePage } from \"./edit-profile.page\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: ProfilePage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProfilePageRoutingModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { GlobalEnv } from \"../env\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Plugins } from \"@capacitor/core\";\r\n\r\nimport jwtDecode from \"jwt-decode\";\r\nconst { Storage } = Plugins;\r\n@Component({\r\n  selector: \"app-profile\",\r\n  templateUrl: \"./edit-profile.page.html\",\r\n  styleUrls: [\"./edit-profile.page.scss\"],\r\n})\r\nexport class ProfilePage implements OnInit {\r\n  userObj: any = {};\r\n  disabledAggiorna: boolean = true;\r\n  oldPassword: string = null;\r\n  newPassword: string = null;\r\n  repeatPassword: string = null;\r\n  platformList: any = {};\r\n  token: string = null;\r\n  constructor(\r\n    public env: GlobalEnv,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.getToken().then(() => {\r\n      if (this.authService.isLoggedIn) {\r\n        Storage.get({ key: \"token\" }).then((data) => {\r\n          this.token = data.value;\r\n          this.getProfileInfo(data.value);\r\n        });\r\n      } else {\r\n        this.router.navigateByUrl(\"/login\");\r\n      }\r\n    });\r\n  }\r\n\r\n  getProfileInfo(token) {\r\n    if (token) {\r\n      const decodedToken = jwtDecode(token);\r\n      const userId = decodedToken[\"id\"];\r\n      if (userId) {\r\n        this.http\r\n          .get(`${this.env.baseUri}/users/${userId}`)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              const userObj = response[\"user\"];\r\n              if (userObj) {\r\n                this.userObj = userObj ? userObj : null;\r\n                this.http\r\n                  .get(`${this.env.baseUri}/platforms/`)\r\n                  .subscribe((response) => {\r\n                    this.platformList = response;\r\n                    for (let i = 0; i < this.platformList.length; i++) {\r\n                      if (this.platformList[i]) {\r\n                        switch (this.platformList[i].name) {\r\n                          case \"Playstation\":\r\n                            this.platformList[i].icon =\r\n                              \"<i class='fab fa-playstation'></i>\";\r\n                            break;\r\n                          case \"Activision\":\r\n                            this.platformList[i].icon =\r\n                              \"<i class='fab fa-jedi-order'></i>\";\r\n                            break;\r\n                          case \"Xbox\":\r\n                            this.platformList[i].icon =\r\n                              \"<i class='fab fa-xbox'></i>\";\r\n                            break;\r\n                          case \"PC\":\r\n                            this.platformList[i].icon =\r\n                              \"<i class='fab fa-steam'></i>\";\r\n                            break;\r\n                          case \"Nintendo\":\r\n                            this.platformList[i].icon =\r\n                              \"<i class='fas fa-gamepad'></i>\";\r\n                            break;\r\n                          default:\r\n                            this.platformList[i].icon =\r\n                              \"<i class='fab fa-gamepad'></i>\";\r\n                            break;\r\n                        }\r\n                      }\r\n                    }\r\n                    this.updateUserPlatformData();\r\n                  });\r\n              }\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  doRefresh(event) {\r\n    this.authService.getToken().then(() => {\r\n      if (this.authService.isLoggedIn) {\r\n        Storage.get({ key: \"token\" }).then((data) => {\r\n          this.getProfileInfo(data.value);\r\n          event.target.complete();\r\n        });\r\n      } else {\r\n        this.router.navigateByUrl(\"/login\");\r\n      }\r\n    });\r\n  }\r\n\r\n  onChangeData() {\r\n    this.disabledAggiorna = false;\r\n  }\r\n\r\n  updateUserPlatformData() {\r\n    if (this.platformList && this.userObj.platforms) {\r\n      for (let i = 0; i < this.platformList.length; i++) {\r\n        let found = false;\r\n        for (let j = 0; j < this.userObj.platforms.length; j++) {\r\n          if (this.platformList[i]._id === this.userObj.platforms[j]._id) {\r\n            found = true;\r\n            this.userObj.platforms[j].icon = this.platformList[i].icon;\r\n            this.userObj.platforms[j].name = this.platformList[i].name;\r\n          }\r\n        }\r\n        if (!found) {\r\n          this.userObj.platforms.push(this.platformList[i]);\r\n        }\r\n      }\r\n    } else if (this.platformList && !this.userObj.platforms) {\r\n      this.userObj.platforms = this.platformList;\r\n    }\r\n  }\r\n\r\n  editUser() {\r\n    const userPatch = {};\r\n    if (this.userObj.username) userPatch[\"username\"] = this.userObj.username;\r\n\r\n    if (this.oldPassword && this.newPassword && this.repeatPassword) {\r\n      if (this.newPassword == this.repeatPassword) {\r\n        userPatch[\"newPassword\"] = this.newPassword;\r\n        userPatch[\"oldPassword\"] = this.oldPassword;\r\n      }\r\n    }\r\n\r\n    let listOfPlatform = [];\r\n\r\n    for (var i = 0; i < this.platformList.length; i++) {\r\n      const element = (<HTMLInputElement>(\r\n        document.getElementById(this.platformList[i]._id)\r\n      )).value;\r\n      listOfPlatform.push({\r\n        username: element,\r\n        _id: this.platformList[i]._id,\r\n      });\r\n    }\r\n    userPatch[\"platforms\"] = listOfPlatform;\r\n\r\n    const decodedToken = jwtDecode(this.token);\r\n    const userId = decodedToken[\"id\"];\r\n    this.http\r\n      .patch(`${this.env.baseUri}/users/${userId}`, userPatch)\r\n      .subscribe((resp) => {\r\n        location.reload();\r\n      });\r\n  }\r\n}\r\n"]}